"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/create-token/page",{

/***/ "(app-pages-browser)/./hooks/useCreateToken.ts":
/*!*********************************!*\
  !*** ./hooks/useCreateToken.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCreateToken: function() { return /* binding */ useCreateToken; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"(app-pages-browser)/./node_modules/@solana/wallet-adapter-react/lib/esm/useConnection.js\");\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"(app-pages-browser)/./node_modules/@solana/wallet-adapter-react/lib/esm/useWallet.js\");\n/* harmony import */ var _services_token_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../services/token-service */ \"(app-pages-browser)/./services/token-service.ts\");\n// hooks/useCreateToken.ts (sans génération de keypair)\n/* __next_internal_client_entry_do_not_use__ useCreateToken auto */ \n\n\nfunction useCreateToken() {\n    let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    const { network = \"devnet\" } = options;\n    const { connection } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_2__.useConnection)();\n    const { publicKey, signTransaction } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__.useWallet)();\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"idle\");\n    const [tokenAddress, setTokenAddress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [txSignature, setTxSignature] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [explorerLink, setExplorerLink] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [errorMessage, setErrorMessage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [progressStage, setProgressStage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    // Service de création de token\n    const tokenService = new _services_token_service__WEBPACK_IMPORTED_MODULE_1__.TokenService(network);\n    // Étapes du processus\n    const progress = [\n        {\n            label: \"Initialisation\",\n            description: \"Pr\\xe9paration de la cr\\xe9ation du token\"\n        },\n        {\n            label: \"Cr\\xe9ation du token\",\n            description: \"Cr\\xe9ation du token sur la blockchain\"\n        },\n        {\n            label: \"Initialisation du mint\",\n            description: \"Configuration des param\\xe8tres du token\"\n        },\n        {\n            label: \"Cr\\xe9ation du compte\",\n            description: \"Cr\\xe9ation du compte pour recevoir les tokens\"\n        },\n        {\n            label: \"Attribution des tokens\",\n            description: \"Distribution de l'offre initiale\"\n        },\n        {\n            label: \"Finalisation\",\n            description: \"Confirmation et finalisation de la cr\\xe9ation\"\n        }\n    ];\n    /**\n   * Crée un nouveau token avec les détails fournis\n   */ const createToken = async (details)=>{\n        if (!publicKey || !signTransaction) {\n            setStatus(\"error\");\n            setErrorMessage(\"Veuillez connecter votre wallet\");\n            return;\n        }\n        setIsLoading(true);\n        setStatus(\"loading\");\n        setProgressStage(0);\n        try {\n            // Étape 1: Initialisation\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n            setProgressStage(1);\n            // Créer un objet wallet pour le service\n            const wallet = {\n                publicKey,\n                signTransaction\n            };\n            // Étape 2: Création du token\n            setProgressStage(2);\n            const result = await tokenService.createToken(details, wallet);\n            // Mettre à jour l'état avec les résultats\n            setTokenAddress(result.tokenAddress);\n            setTxSignature(result.txSignature);\n            setExplorerLink(result.explorerLink);\n            // Finalisation\n            setProgressStage(5);\n            setStatus(\"success\");\n        } catch (error) {\n            console.error(\"Erreur lors de la cr\\xe9ation du token:\", error);\n            setStatus(\"error\");\n            setErrorMessage(error instanceof Error ? error.message : \"Une erreur s'est produite\");\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    /**\n   * Mint des tokens supplémentaires\n   */ const mintTokens = async (recipient, amount)=>{\n        if (!publicKey || !signTransaction || !tokenAddress) {\n            setStatus(\"error\");\n            setErrorMessage(\"Wallet non connect\\xe9 ou token inexistant\");\n            return;\n        }\n        setIsLoading(true);\n        try {\n            // Créer un objet wallet pour le service\n            const wallet = {\n                publicKey,\n                signTransaction\n            };\n            // Minter des tokens supplémentaires\n            const txSignature = await tokenService.mintTokens(tokenAddress, recipient, amount, wallet);\n            // Afficher un message de succès\n            alert(\"Tokens mint\\xe9s avec succ\\xe8s! Transaction: \".concat(txSignature));\n        } catch (error) {\n            console.error(\"Erreur lors du minting de tokens:\", error);\n            setErrorMessage(error instanceof Error ? error.message : \"Une erreur s'est produite\");\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    return {\n        createToken,\n        mintTokens,\n        isLoading,\n        status,\n        tokenAddress,\n        txSignature,\n        explorerLink,\n        errorMessage,\n        progressStage,\n        progress\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useCreateToken.ts\n"));

/***/ })

});